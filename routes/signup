package com.example.demo.controller;

import com.google.api.core.ApiFuture;
import com.google.auth.oauth2.GoogleCredentials;
import com.google.cloud.firestore.Firestore;
import com.google.cloud.firestore.SetOptions;
import com.google.firebase.FirebaseApp;
import com.google.firebase.FirebaseOptions;
import com.google.firebase.cloud.FirestoreClient;
import org.springframework.core.io.ClassPathResource;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import javax.annotation.PostConstruct;
import javax.servlet.http.HttpServletRequest;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ExecutionException;

@Controller
public class AuthController {

    @PostConstruct
    public void init() throws IOException {
        FileInputStream serviceAccount = new FileInputStream(new ClassPathResource("serviceAccountKey.json").getFile());
        FirebaseOptions options = new FirebaseOptions.Builder()
                .setCredentials(GoogleCredentials.fromStream(serviceAccount))
                .build();
        FirebaseApp.initializeApp(options);
    }

    @GetMapping("/signup")
    public String showSignUpPage() {
        return "signup";
    }

    @PostMapping("/signup")
    public String signUpUser(@RequestParam String email, @RequestParam String password, @RequestParam String name, Model model, HttpServletRequest request) {
        Firestore db = FirestoreClient.getFirestore();

        try {
            // Add user data to Firestore
            Map<String, Object> user = new HashMap<>();
            user.put("email", email);
            user.put("password", password);
            user.put("name", name);

            ApiFuture<com.google.cloud.firestore.DocumentReference> result = db.collection("users").add(user);

            System.out.println("Document written with ID: " + result.get().getId());
            model.addAttribute("message", "User added to Firestore successfully.");
            return "success"; // Assuming there's a success.html page to show the message
        } catch (InterruptedException | ExecutionException | IOException e) {
            e.printStackTrace();
            model.addAttribute("error", "Error adding user to Firestore.");
            return "signup"; // Returning to the signup page with an error message
        }
    }
}
